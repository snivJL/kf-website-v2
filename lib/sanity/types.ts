/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type HighlightItem = {
  _type: 'highlightItem';
  title?: string;
  problem?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  solution?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
};

export type Cta = {
  _type: 'cta';
  text?: string;
  linkText?: string;
  linkTarget?: string;
};

export type UseCaseItem = {
  _type: 'useCaseItem';
  title?: string;
  hook?: string;
  buttonText?: string;
  buttonLink?: string;
  objective?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  painPoints?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  solution?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  benefits?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  korefocusRole?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
};

export type FaqItem = {
  _type: 'faqItem';
  question?: string;
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
};

export type Highlights = {
  _id: string;
  _type: 'highlights';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  graySubHeading?: string;
  blueSubHeading?: string;
  shortText?: string;
  testimonial?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  tagline?: string;
  items?: Array<
    {
      _key: string;
    } & HighlightItem
  >;
};

export type HowWeWorkItem = {
  _type: 'howWeWorkItem';
  title?: string;
  problemLabel?: string;
  solutionLabel?: string;
  problem?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  solution?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
};

export type HowWeWork = {
  _id: string;
  _type: 'howWeWork';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  graySubHeading?: string;
  blueSubHeading?: string;
  items?: Array<
    {
      _key: string;
    } & HowWeWorkItem
  >;
};

export type ContactUsPage = {
  _id: string;
  _type: 'contactUsPage';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  description?: string;
  phoneLabel?: string;
  phoneNumber?: string;
  emailLabel?: string;
  emailAddress?: string;
  submitButtonText?: string;
  sendingButtonText?: string;
  successToast?: string;
  errorToast?: string;
};

export type UseCase = {
  _id: string;
  _type: 'useCase';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  subHeading?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }>;
  blueSection?: string;
  useCases?: Array<
    {
      _key: string;
    } & UseCaseItem
  >;
};

export type Faq = {
  _id: string;
  _type: 'faq';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  faqItem?: Array<
    {
      _key: string;
    } & FaqItem
  >;
};

export type Hero = {
  _id: string;
  _type: 'hero';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heading?: string;
  headingBlue?: string;
  ctas?: Array<
    {
      _key: string;
    } & Cta
  >;
  quoteText?: string;
  quoteAuthor?: string;
};

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | HighlightItem
  | Cta
  | UseCaseItem
  | FaqItem
  | Highlights
  | HowWeWorkItem
  | HowWeWork
  | ContactUsPage
  | UseCase
  | Faq
  | Hero
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../kf-website-frontend/app/use-cases/[slug]/page.tsx
// Variable: useCaseQuery
// Query: *[_type == "useCase"][0] {    "useCase": useCases[buttonLink == "/use-cases/" + $slug][0] {      title,      objective[]{..., markDefs[]{...}},      painPoints[]{..., markDefs[]{...}},      solution[]{..., markDefs[]{...}},      benefits[]{..., markDefs[]{...}},      korefocusRole[]{..., markDefs[]{...}}    }  }
export type UseCaseQueryResult = {
  useCase: {
    title: string | null;
    objective: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }> | null;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    painPoints: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }> | null;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    solution: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }> | null;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    benefits: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }> | null;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    korefocusRole: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }> | null;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
  } | null;
} | null;
// Variable: metaQuery
// Query: *[_type == "useCase"][0] {    "useCase": useCases[buttonLink == "/use-cases/" + $slug][0] {      title,      hook    }  }
export type MetaQueryResult = {
  useCase: {
    title: string | null;
    hook: string | null;
  } | null;
} | null;

// Source: ../kf-website-frontend/lib/sanity/queries.ts
// Variable: highlightsQuery
// Query: *[_type == "highlights"][0] {  heading,  graySubHeading,  blueSubHeading,  shortText,    testimonial,    tagline,  items[] {    title,    problem,    solution,      }}
export type HighlightsQueryResult = {
  heading: string | null;
  graySubHeading: string | null;
  blueSubHeading: string | null;
  shortText: string | null;
  testimonial: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: 'span';
      _key: string;
    }>;
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
    listItem?: 'bullet' | 'number';
    markDefs?: Array<{
      href?: string;
      _type: 'link';
      _key: string;
    }>;
    level?: number;
    _type: 'block';
    _key: string;
  }> | null;
  tagline: string | null;
  items: Array<{
    title: string | null;
    problem: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    solution: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
  }> | null;
} | null;
// Variable: howWeWorkQuery
// Query: *[_type == "howWeWork"][0] {    title,    blueSubHeading,    graySubHeading,    items[]{      title,      problemLabel,      problem,      solutionLabel,      solution    }  }
export type HowWeWorkQueryResult = {
  title: string | null;
  blueSubHeading: string | null;
  graySubHeading: string | null;
  items: Array<{
    title: string | null;
    problemLabel: string | null;
    problem: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    solutionLabel: string | null;
    solution: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
  }> | null;
} | null;
// Variable: homePageQuery
// Query: {  "hero": *[_type == "hero"][0] {  heading,  headingBlue,  image {    asset,    alt  },  ctas[] {    text,    linkText,    linkTarget,  }},  "ourApproach": *[_type == "ourApproach"][0] {  heading,  graySubHeading,  blueSubHeading,  steps[] {    _key,    title,    index,    description[]    }},  "faq": *[_type == "faq"][0] {  heading,  faqItem[] {    _key,    question,    answer[]          }},  "useCase": *[_type == "useCase"][0] {  heading,  subHeading,  description,    blueSection,     useCases[] {    _key,    title,    hook,    buttonText,    buttonLink,    objective[]{..., markDefs[]{...}},    painPoints[]{..., markDefs[]{...}},    solution[]{..., markDefs[]{...}},    benefits[]{..., markDefs[]{...}},    korefocusRole[]{..., markDefs[]{...}}  }},  "contactUs": *[_type == "contactUsPage"][0] {  title,  description,  phoneLabel,  phoneNumber,  emailLabel,  emailAddress,  submitButtonText,  sendingButtonText,  successToast,  errorToast},  "highlights": *[_type == "highlights"][0] {  heading,  graySubHeading,  blueSubHeading,  shortText,    testimonial,    tagline,  items[] {    title,    problem,    solution,      }},  "howWeWork": *[_type == "howWeWork"][0] {    title,    blueSubHeading,    graySubHeading,    items[]{      title,      problemLabel,      problem,      solutionLabel,      solution    }  }}
export type HomePageQueryResult = {
  hero: {
    heading: string | null;
    headingBlue: string | null;
    image: null;
    ctas: Array<{
      text: string | null;
      linkText: string | null;
      linkTarget: string | null;
    }> | null;
  } | null;
  ourApproach: null;
  faq: {
    heading: string | null;
    faqItem: Array<{
      _key: string;
      question: string | null;
      answer: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
    }> | null;
  } | null;
  useCase: {
    heading: string | null;
    subHeading: string | null;
    description: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    blueSection: string | null;
    useCases: Array<{
      _key: string;
      title: string | null;
      hook: string | null;
      buttonText: string | null;
      buttonLink: string | null;
      objective: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }> | null;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      painPoints: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }> | null;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      solution: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }> | null;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      benefits: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }> | null;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      korefocusRole: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }> | null;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
    }> | null;
  } | null;
  contactUs: {
    title: string | null;
    description: string | null;
    phoneLabel: string | null;
    phoneNumber: string | null;
    emailLabel: string | null;
    emailAddress: string | null;
    submitButtonText: string | null;
    sendingButtonText: string | null;
    successToast: string | null;
    errorToast: string | null;
  } | null;
  highlights: {
    heading: string | null;
    graySubHeading: string | null;
    blueSubHeading: string | null;
    shortText: string | null;
    testimonial: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: 'span';
        _key: string;
      }>;
      style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal';
      listItem?: 'bullet' | 'number';
      markDefs?: Array<{
        href?: string;
        _type: 'link';
        _key: string;
      }>;
      level?: number;
      _type: 'block';
      _key: string;
    }> | null;
    tagline: string | null;
    items: Array<{
      title: string | null;
      problem: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      solution: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
    }> | null;
  } | null;
  howWeWork: {
    title: string | null;
    blueSubHeading: string | null;
    graySubHeading: string | null;
    items: Array<{
      title: string | null;
      problemLabel: string | null;
      problem: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
      solutionLabel: string | null;
      solution: Array<{
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: 'span';
          _key: string;
        }>;
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal';
        listItem?: 'bullet' | 'number';
        markDefs?: Array<{
          href?: string;
          _type: 'link';
          _key: string;
        }>;
        level?: number;
        _type: 'block';
        _key: string;
      }> | null;
    }> | null;
  } | null;
};

// Query TypeMap
// import "@sanity/client";
// declare module "@sanity/client" {
//   interface SanityQueries {
//     "\n  *[_type == \"useCase\"][0] {\n    \"useCase\": useCases[buttonLink == \"/use-cases/\" + $slug][0] {\n      title,\n      objective[]{..., markDefs[]{...}},\n      painPoints[]{..., markDefs[]{...}},\n      solution[]{..., markDefs[]{...}},\n      benefits[]{..., markDefs[]{...}},\n      korefocusRole[]{..., markDefs[]{...}}\n    }\n  }\n": UseCaseQueryResult;
//     "\n  *[_type == \"useCase\"][0] {\n    \"useCase\": useCases[buttonLink == \"/use-cases/\" + $slug][0] {\n      title,\n      hook\n    }\n  }\n": MetaQueryResult;
//     "\n*[_type == \"highlights\"][0] {\n  heading,\n  graySubHeading,\n  blueSubHeading,\n  shortText,\n    testimonial,\n    tagline,\n  items[] {\n    title,\n    problem,\n    solution,\n    \n  }\n}\n": HighlightsQueryResult;
//     "\n*[_type == \"howWeWork\"][0] {\n    title,\n    blueSubHeading,\n    graySubHeading,\n    items[]{\n      title,\n      problemLabel,\n      problem,\n      solutionLabel,\n      solution\n    }\n  }\n": HowWeWorkQueryResult;
//     "\n{\n  \"hero\": \n*[_type == \"hero\"][0] {\n  heading,\n  headingBlue,\n  image {\n    asset,\n    alt\n  },\n  ctas[] {\n    text,\n    linkText,\n    linkTarget,\n  }\n}\n,\n  \"ourApproach\": \n*[_type == \"ourApproach\"][0] {\n  heading,\n  graySubHeading,\n  blueSubHeading,\n  steps[] {\n    _key,\n    title,\n    index,\n    description[]  \n  }\n}\n,\n  \"faq\": \n*[_type == \"faq\"][0] {\n  heading,\n  faqItem[] {\n    _key,\n    question,\n    answer[]        \n  }\n}\n,\n  \"useCase\": \n*[_type == \"useCase\"][0] {\n  heading,\n  subHeading,\n  description,  \n  blueSection,   \n  useCases[] {\n    _key,\n    title,\n    hook,\n    buttonText,\n    buttonLink,\n    objective[]{..., markDefs[]{...}},\n    painPoints[]{..., markDefs[]{...}},\n    solution[]{..., markDefs[]{...}},\n    benefits[]{..., markDefs[]{...}},\n    korefocusRole[]{..., markDefs[]{...}}\n  }\n}\n,\n  \"contactUs\": \n*[_type == \"contactUsPage\"][0] {\n  title,\n  description,\n  phoneLabel,\n  phoneNumber,\n  emailLabel,\n  emailAddress,\n  submitButtonText,\n  sendingButtonText,\n  successToast,\n  errorToast\n}\n,\n  \"highlights\": \n*[_type == \"highlights\"][0] {\n  heading,\n  graySubHeading,\n  blueSubHeading,\n  shortText,\n    testimonial,\n    tagline,\n  items[] {\n    title,\n    problem,\n    solution,\n    \n  }\n}\n,\n  \"howWeWork\": \n*[_type == \"howWeWork\"][0] {\n    title,\n    blueSubHeading,\n    graySubHeading,\n    items[]{\n      title,\n      problemLabel,\n      problem,\n      solutionLabel,\n      solution\n    }\n  }\n\n}\n": HomePageQueryResult;
//   }
// }
